import{_ as i,c as t,o as a,a5 as o,bQ as n,bR as r,bS as s,bT as l,bU as c,bV as d,bW as h}from"./chunks/framework.CgTIqH8g.js";const E=JSON.parse('{"title":"Enunciation Environment Insertion","description":"","frontmatter":{"title":"Enunciation Environment Insertion"},"headers":[],"relativePath":"docs/guide-enunciation.md","filePath":"docs/guide-enunciation.md","lastUpdated":1761025755000}'),m={name:"docs/guide-enunciation.md"};function u(p,e,g,f,b,x){return a(),t("div",null,[...e[0]||(e[0]=[o('<h1 id="enunciation-environment-insertion-in-text-mode" tabindex="-1">Enunciation Environment Insertion in Text Mode <a class="header-anchor" href="#enunciation-environment-insertion-in-text-mode" aria-label="Permalink to “Enunciation Environment Insertion in Text Mode”">​</a></h1><p>In Liii STEM&#39;s Text Mode, you can insert <strong>Enunciations</strong> to configure independent <strong>environments</strong> for parts of your article such as <strong>Theorems</strong>, <strong>Lemmas</strong>, <strong>Corollaries</strong>, <strong>Propositions</strong>, and <strong>Proofs</strong>, ensuring beautiful and standardized article typesetting. This guide will help you achieve the final effect shown in the figure below.</p><p><img src="'+n+'" alt="Figure 1"></p><h2 id="basic-method-for-inserting-enunciations" tabindex="-1">Basic Method for Inserting Enunciations <a class="header-anchor" href="#basic-method-for-inserting-enunciations" aria-label="Permalink to “Basic Method for Inserting Enunciations”">​</a></h2><ul><li>In the menu bar, click <code>Insert</code> -&gt; <code>Enunciation</code> -&gt; <code>Theorem</code>.</li><li>You can select environments such as Lemma, Corollary, Proposition, Proof, etc., as needed.</li></ul><p><img src="'+r+'" alt="Figure 2"></p><ul><li><p>If you need <strong>more diverse</strong> numbering or environment format requirements, please follow these steps for further operation:</p><ol><li>Place the cursor on the enunciation you added.</li><li>In the menu bar, click <code>Focus</code> -&gt; <code>Preferences</code>.</li><li>Select the numbering or environment format you need. The specific explanations for the formats are shown in the table below.</li></ol></li></ul><p><img src="'+s+'" alt="Figure 3"></p><table tabindex="0"><thead><tr><th>Format Name</th><th>Description</th></tr></thead><tbody><tr><td>European numbering style</td><td>Set European style</td></tr><tr><td>Prefix by section number</td><td>Add section level</td></tr><tr><td>Framed theorems</td><td>Add frame</td></tr><tr><td>Hanging theorems</td><td>Add floating frame</td></tr></tbody></table><h2 id="what-are-enunciations" tabindex="-1">What are Enunciations? <a class="header-anchor" href="#what-are-enunciations" aria-label="Permalink to “What are Enunciations?”">​</a></h2><h3 id="common-enunciation-explanations-and-examples" tabindex="-1">Common Enunciation Explanations and Examples <a class="header-anchor" href="#common-enunciation-explanations-and-examples" aria-label="Permalink to “Common Enunciation Explanations and Examples”">​</a></h3><ol><li><strong>Theorem</strong>: Core conclusion that requires rigorous proof, representing the main contribution of the article. <img src="'+n+'" alt="Figure 1"></li><li><strong>Lemma</strong>: Auxiliary conclusion that provides intermediate steps for proving theorems or propositions. <img src="'+l+'" alt="Figure 4"></li><li><strong>Corollary</strong>: Direct extension result of a theorem or proposition, often requiring brief supplementary proof. <img src="'+c+'" alt="Figure 5"></li><li><strong>Proposition</strong>: Independent conclusion of lesser importance than a theorem, can be considered as a minor theorem or unnamed theorem. <img src="'+d+'" alt="Figure 6"></li><li><strong>Proof</strong>: Logical derivation process that verifies the correctness of theorems, lemmas, propositions, or corollaries. <img src="'+h+'" alt="Figure 7"></li></ol><h3 id="enunciation-type-list" tabindex="-1">Enunciation Type List <a class="header-anchor" href="#enunciation-type-list" aria-label="Permalink to “Enunciation Type List”">​</a></h3><p>We provide a very rich variety of available enunciation types, including:</p><h4 id="mathematical-theorem-types" tabindex="-1">Mathematical Theorem Types <a class="header-anchor" href="#mathematical-theorem-types" aria-label="Permalink to “Mathematical Theorem Types”">​</a></h4><ul><li>Theorem</li><li>Proposition</li><li>Lemma</li><li>Corollary</li><li>Axiom</li><li>Assumption</li></ul><h4 id="definition-and-explanation-types" tabindex="-1">Definition and Explanation Types <a class="header-anchor" href="#definition-and-explanation-types" aria-label="Permalink to “Definition and Explanation Types”">​</a></h4><ul><li>Definition</li><li>Notation</li><li>Convention</li></ul><h4 id="note-and-explanation-types" tabindex="-1">Note and Explanation Types <a class="header-anchor" href="#note-and-explanation-types" aria-label="Permalink to “Note and Explanation Types”">​</a></h4><ul><li>Remark</li><li>Note</li><li>Warning</li></ul><h4 id="example-and-exercise-types" tabindex="-1">Example and Exercise Types <a class="header-anchor" href="#example-and-exercise-types" aria-label="Permalink to “Example and Exercise Types”">​</a></h4><ul><li>Example</li><li>Exercise</li><li>Problem</li><li>Question</li><li>Solution</li><li>Answer</li></ul><h4 id="others" tabindex="-1">Others <a class="header-anchor" href="#others" aria-label="Permalink to “Others”">​</a></h4><ul><li>Proof</li><li>Acknowledgments</li></ul><h2 id="usage-suggestions-and-precautions" tabindex="-1">Usage Suggestions and Precautions <a class="header-anchor" href="#usage-suggestions-and-precautions" aria-label="Permalink to “Usage Suggestions and Precautions”">​</a></h2><ul><li>Under different language styles, the presentation effect of the same enunciation may differ. For example, the content in &quot;Theorem&quot; appears in upright text in Chinese style, but in italic in English style.</li><li>Please try to use enunciations individually and avoid nesting one enunciation within another.</li></ul>',26)])])}const _=i(m,[["render",u]]);export{E as __pageData,_ as default};
