import{_ as t,c as a,o,a5 as i,bB as r,bC as n,bD as s,bE as l,bF as c,bG as d,bH as g,bI as p,bJ as h,bK as m,bL as w,bM as u,bN as _,bO as f,bP as b}from"./chunks/framework.CgTIqH8g.js";const S=JSON.parse('{"title":"Drawing","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide-draw.md","filePath":"docs/guide-draw.md","lastUpdated":1761037405000}'),k={name:"docs/guide-draw.md"};function D(v,e,y,I,P,x){return o(),a("div",null,[...e[0]||(e[0]=[i('<h1 id="drawing" tabindex="-1">Drawing <a class="header-anchor" href="#drawing" aria-label="Permalink to “Drawing”">​</a></h1><p>There are <strong>two ways</strong> to draw in Liii STEM.</p><p>The first is using the software&#39;s built-in drawing tools, which we will introduce in detail next.</p><h2 id="_1-inserting-canvas-for-drawing" tabindex="-1">1 Inserting Canvas for Drawing <a class="header-anchor" href="#_1-inserting-canvas-for-drawing" aria-label="Permalink to “1 Inserting Canvas for Drawing”">​</a></h2><ul><li>Create Blank Drawing</li></ul><p>Click <code>Insert</code> -&gt; <code>Image</code> -&gt; <code>Draw Graphics</code> to enter drawing mode. The editor will insert a <strong>canvas</strong> and switch to the drawing toolbar.</p><p><img src="'+r+'" alt=""></p><p><img src="'+n+'" alt=""></p><p>The basic primitives provided in the toolbar from left to right are <strong>point, polyline, polygon, curve, closed curve, arc, circle and ellipse</strong>. After selecting, <strong>click</strong> on the canvas to <strong>place nodes</strong>, <strong>double-click</strong> to finish drawing that shape. In the second row of the figure above, you can set the <strong>point and line styles</strong>. This is the basic operation of drawing, which we will continue to use in subsequent scenarios.</p><p><img src="'+s+'" alt=""></p><h2 id="_2-drawing-at-focus-position" tabindex="-1">2 Drawing at Focus Position <a class="header-anchor" href="#_2-drawing-at-focus-position" aria-label="Permalink to “2 Drawing at Focus Position”">​</a></h2><p>The canvas in <strong>Inserting Canvas for Drawing</strong> will occupy the entire line. When you don&#39;t need to draw complete graphics but need to <strong>annotate at the focus position</strong> and other operations, you can use this method.</p><p><img src="'+l+'" alt=""><img src="'+c+'" alt=""></p><ol><li>Place the focus at the desired position, then click <code>Insert</code> -&gt; <code>Image</code> -&gt; <code>Draw Graphics at Current Focus</code>.</li></ol><p><img src="'+d+'" alt=""></p><ol start="2"><li>After insertion, click <code>Enter graphics mode</code> to <strong>enter</strong> drawing mode.</li></ol><p><img src="'+g+'" alt=""></p><ol start="3"><li>After drawing is complete, if needed, click the left icon to <strong>adjust grid style or hide grid</strong>.</li></ol><p><img src="'+p+'" alt=""></p><ol start="4"><li>Finally, click <code>Exit graphics mode</code> or click on a blank area to <strong>exit</strong>.</li></ol><blockquote><p>Below is the complete animated example for this section, where the operations for <strong>basic primitives</strong> are the same as described earlier. <img src="'+h+'" alt=""></p></blockquote><h2 id="_3-drawing-in-selected-area" tabindex="-1">3 Drawing in Selected Area <a class="header-anchor" href="#_3-drawing-in-selected-area" aria-label="Permalink to “3 Drawing in Selected Area”">​</a></h2><p>Drawing at focus position is still a small canvas of a certain size. If you only need to annotate on selected content, we also have the <strong>drawing in selected area</strong> function.</p><ul><li>After selecting the desired area, click <strong>Insert</strong> -&gt; <strong>Image</strong> -&gt; <strong>Draw Graphics in Selected Area</strong>. The operation to <strong>exit</strong> this mode after drawing is the same as in <strong>2 Drawing at Focus Position</strong>.</li></ul><p><img src="'+m+'" alt=""></p><blockquote><p>However, it&#39;s worth mentioning that this function cannot select areas across multiple lines. If you need operations spanning multiple lines, please refer to <strong>2 Drawing at Focus Position</strong>.</p></blockquote><h2 id="_4-drawing-in-math-mode" tabindex="-1">4 Drawing in Math Mode <a class="header-anchor" href="#_4-drawing-in-math-mode" aria-label="Permalink to “4 Drawing in Math Mode”">​</a></h2><p>The operations we mentioned earlier were all drawing operations in text mode. Actually, we can also draw commutative diagrams in math mode. After entering math mode, click <code>Insert</code> -&gt; <code>Image</code> -&gt; <code>Commutative diagram</code> to insert a commutative diagram canvas in math mode. The text in this canvas defaults to the same format as <strong>text in math mode</strong>.</p><p><img src="'+w+'" alt=""></p><h2 id="_5-drawing-in-slide-style" tabindex="-1">5 Drawing in Slide Style <a class="header-anchor" href="#_5-drawing-in-slide-style" aria-label="Permalink to “5 Drawing in Slide Style”">​</a></h2><p><img src="'+u+'" alt=""></p><p>When creating a document, it&#39;s usually in the default generic mode. If needed, we can switch it to <strong>slide mode</strong>. In this mode, you can draw graphics more freely.</p><p>Process as follows ↓</p><p><img src="'+_+'" alt=""></p><ol><li><p>Click <code>Style</code> -&gt; <code>beamer</code> to switch the document to slide mode.</p><p><img src="'+f+'" alt=""></p></li><li><p>Click <code>Draw</code> to enter drawing mode.</p></li></ol><p>The subsequent operations are largely similar to before.</p><blockquote><p><img src="'+b+'" alt=""> Additionally, we have another drawing method using gnuplot. For more information, please refer to the documentation in <strong>Help</strong> -&gt; <strong>Plugins</strong> -&gt; <strong>gnuplot</strong>.</p></blockquote>',37)])])}const A=t(k,[["render",D]]);export{S as __pageData,A as default};
